EnableExplicit

XIncludeFile "Leaflet.sbi"

Enumeration
  #Window
  #Button
  #LeafletGadget
EndEnumeration

Global NewMap Marker()
Global myMap
Global RandomMarkerNumber = 50

Procedure JsonParse(String.s, ReplaceQuotes = #True)
  If ReplaceQuotes
    String = ReplaceString(String, "'", Chr(34))
  EndIf
  ! return JSON.parse(v_string);
EndProcedure

Procedure GetRandomLatLng(myMap)
  
  !	var bounds = v_mymap.getBounds(),
  !		southWest = bounds.getSouthWest(),
  !		northEast = bounds.getNorthEast(),
  !		lngSpan = northEast.lng - southWest.lng,
  !		latSpan = northEast.lat - southWest.lat;
  !
  !	return L.latLng(
  !			southWest.lat + latSpan * Math.random(),
  !			southWest.lng + lngSpan * Math.random());
  
EndProcedure

Procedure Populate(myMap, myMarkerClusterGroup)
  
  ; populate the Map wtih random markers
  
  Protected Counter
  Protected myMarker
  
  For Counter = 0 To 100
    
    myMarker = Leaflet::NewMarker(GetRandomLatLng(myMap))
    
    Leaflet::SetStringAttribute(myMarker, Leaflet::#Title, "Random Marker: " + Str(Counter))
    Leaflet::SetStringAttribute(myMarker, Leaflet::#Tooltip, "Random Marker: " + Str(Counter))
    
    Leaflet::AddItem(myMarkerClusterGroup, myMarker)
    
    Marker("M" + Str(Counter)) = myMarker
    
  Next
  
EndProcedure

Procedure SizeWindowEvent()
  
  ResizeGadget(#LeafletGadget, #PB_Ignore, #PB_Ignore, WindowWidth(#Window) - 180, WindowHeight(#Window) - 20)
  
EndProcedure

Procedure ButtonEvent()
  
  Static ZoomedIn
  
  Protected myMarker
  Protected LatLng
  
  If ZoomedIn
    
    RandomMarkerNumber = Random(0, 100)
    
    SetGadgetText(#Button, "Zoom to Marker " + Str(RandomMarkerNumber))
    
    LatLng = Leaflet::LatLng(50.703416, 6.634032)
    Leaflet::SetView(myMap, LatLng, 5)
    ZoomedIn = #False
    
  Else
    
    SetGadgetText(#Button, "Zoom out")
    
    myMarker = Marker("M"+ Str(RandomMarkerNumber))
    LatLng = Leaflet::GetAttribute(myMarker, Leaflet::#LatLng)
    Leaflet::SetView(myMap, LatLng, 8)
    ZoomedIn = #True
    
  EndIf
  
EndProcedure

Procedure Main()
  
  OpenWindow(#Window, #PB_Ignore, #PB_Ignore, 800, 600, "LeafletGadgetDemo", #PB_Window_ScreenCentered | #PB_Window_SizeGadget)
  
  BindEvent(#PB_Event_SizeWindow, @SizeWindowEvent(), #Window)
  
  ButtonGadget(#Button, 10, 10, 150, 30, "Zoom to Marker " + Str(RandomMarkerNumber))
  
  BindGadgetEvent(#Button, @ButtonEvent())
  
  ContainerGadget(#LeafletGadget, 170, 10, WindowWidth(#Window) - 180, WindowHeight(#Window) - 20, #PB_Container_Flat) : CloseGadgetList()
  
  Leaflet::BindGadget(#LeafletGadget, JsonParse("{ 'center': [50.703416, 6.634032], 'zoom': 5 }"))
  
  myMap = Leaflet::GetMap(#LeafletGadget)
  
  ; add an OpenStreetMap-Tilelayer to the map
  Leaflet::AddItem(myMap, Leaflet::NewTileLayer(Leaflet::#TileLayerType_OpenStreetMap))
  
  ; create a MarkerClusterGroup
  Protected myMarkerClusterGroup = Leaflet::NewMarkerClusterGroup()
  
  ; set the cluster-radius
  Leaflet::SetMaxClusterRadius(myMarkerClusterGroup, 100)
  
  ; ... populate it with random markers
  Populate(myMap, myMarkerClusterGroup)
  
  ; ... and add it to the map:
  Leaflet::AddItem(myMap, myMarkerClusterGroup)
  
EndProcedure

Leaflet::Init(@Main())

